---
// RandomBackgroundComponent.astro
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;

// Import all images from the bg folder at build time
const images = import.meta.glob('../assets/bg/*.(png|jpg|jpeg|webp|avif)', { eager: true });

// Extract the URLs and pass them to the client
const imageUrls = Object.values(images).map((mod: any) => mod.default);
---

<style>
  body {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    transition: background-image 0.3s ease-in-out;
  }
</style>

<script define:vars={{ imageUrls, className }}>
  // Function to randomly select and apply background
  function setRandomBackground() {
    const randomIndex = Math.floor(Math.random() * imageUrls.length);
    const selectedImage = imageUrls[randomIndex];
    
    document.body.style.backgroundImage = `url(${selectedImage})`;
    
    // Apply additional classes to body if provided
    if (className && !document.body.className.includes(className)) {
      document.body.className += ` ${className}`;
    }
  }

  // Set random background on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setRandomBackground);
  } else {
    setRandomBackground();
  }

  // Optional: Change background on window focus (when user returns to tab)
  window.addEventListener('focus', setRandomBackground);
  
  // Optional: Add a way to manually trigger background change
  window.changeBackground = setRandomBackground;
</script>